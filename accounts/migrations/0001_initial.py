# Generated by Django 4.2.16 on 2024-11-17 08:59

import custom_timezone
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=custom_timezone.CustomTimezone.custom_now, verbose_name='date joined')),
                ('email_confirmed', models.BooleanField(default=False)),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, '有料会員'), (2, '無料会員'), (3, '訪問者'), (4, '運営者'), (5, '審査員'), (6, 'AI'), (7, '昔の作家など'), (8, '祭り作家'), (9, '旧SSS作家')], default=2)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('nickname', models.CharField(max_length=50, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_login', models.BooleanField(default=True)),
                ('strengths', models.CharField(blank=True, max_length=100)),
                ('weaknesses', models.CharField(blank=True, max_length=100)),
                ('age', models.PositiveSmallIntegerField(blank=True, choices=[(10, 'だいたい10歳'), (20, 'だいたい20歳'), (30, 'だいたい30歳'), (40, 'だいたい40歳'), (50, 'だいたい50歳'), (60, 'だいたい60歳'), (70, 'だいたい70歳'), (80, 'だいたい80歳'), (90, 'だいたい90歳'), (100, 'だいたい100歳'), (110, 'だいたい110歳'), (120, 'だいたい120歳'), (130, 'だいたい130歳')], null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'たぶん男'), ('F', 'たぶん女'), ('N', '男でも女でもない何か')], max_length=1, null=True)),
                ('species', models.CharField(blank=True, default='人間かも', max_length=100)),
                ('pet_peeve', models.CharField(blank=True, max_length=100)),
                ('habit', models.CharField(blank=True, max_length=100)),
                ('residence', models.CharField(blank=True, max_length=100)),
                ('likes_matcha', models.BooleanField(default=None, null=True)),
                ('hobby', models.CharField(blank=True, max_length=100)),
                ('current_trend', models.CharField(blank=True, max_length=100)),
                ('favorite_songs', models.CharField(blank=True, max_length=100)),
                ('favorite_dance', models.CharField(blank=True, max_length=100)),
                ('favorite_phrase', models.CharField(blank=True, max_length=100)),
                ('introduction', models.TextField(blank=True, default='')),
                ('selected_writer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='selected_novels', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
